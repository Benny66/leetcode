package array

/*
有效的数独
请你判断一个 9 x 9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。

数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。（请参考示例图）
 

注意：

一个有效的数独（部分已被填充）不一定是可解的。
只需要根据以上规则，验证已经填入的数字是否有效即可。
空白格用 '.' 表示。

输入：board = 
[["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
输出：true

*/
func isValidSudoku(board [][]byte) bool {
    var hArr,sArr [9][9]int
    var kArr [3][3][9]int
    for x, row:=range board {
        for y,item := range row {
            if item == '.' {
                continue
            }
            index := item - '1'
            hArr[x][index]++
            sArr[y][index]++
            kArr[x/3][y/3][index]++
            if hArr[x][index] > 1 || sArr[y][index] > 1 || kArr[x/3][y/3][index] > 1 {
                return false
            }
        }
    }
    return true
}